How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Was able to compare the lines of code where differences occurred rather than look through all the code

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Easy to track changes that contribute to a difference in the end result.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pro - each commit is made up of a logical set of code updates that relate
    Con - potential to lose unsaved work, commit may not compile, commit may have multiple changes that do not relate

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    A change in one program may require changes in others also and saving multiple files at once allows a view of history for the entire repository at each commit not just a single file.

How can you use the commands git log and git diff to view the history of files?

    Git log shows id, author and description for each commit. Using the --stat option gives you the number of inserts and deletions also.
    Git diff allows you to compare two commit ids to understand the lines of code that have changed.

How might using version control make you more confident to make changes that
could break something?

    easy to find commit where break occurs (using git checkout), easy to understand why break occurs (using git diff) and easy to revert to older version if necessary.

Now that you have your workspace set up, what do you want to try using Git for?

    Development